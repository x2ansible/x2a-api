name: Build & Publish UBI Image with Podman

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  ORG: x2ansible
  IMAGE_NAME: x2a-api

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Podman and gh CLI
        run: |
          sudo apt-get update
          sudo apt-get -y install podman gh

      - name: Login to GHCR
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${CR_PAT}" | podman login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Build image with enhanced labels for linking
        run: |
          podman build \
            --label "org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
            --label "org.opencontainers.image.description=${{ env.IMAGE_NAME }} API" \
            --label "org.opencontainers.image.url=https://github.com/${{ github.repository }}" \
            --label "org.opencontainers.image.documentation=https://github.com/${{ github.repository }}" \
            --label "org.opencontainers.image.version=${{ github.sha }}" \
            --label "org.opencontainers.image.revision=${{ github.sha }}" \
            --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            --label "org.opencontainers.image.licenses=MIT" \
            --label "org.opencontainers.image.vendor=${{ env.ORG }}" \
            --label "org.opencontainers.image.title=${{ env.IMAGE_NAME }}" \
            -t ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_NAME }}:latest \
            -t ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -f Containerfile .

      - name: Push images
        run: |
          podman push ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_NAME }}:latest
          podman push ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Package published successfully
        run: |
          echo " Package published successfully!"
          echo ""
          echo "ðŸ“¦ Package Information:"
          echo "Registry: ${{ env.REGISTRY }}"
          echo "Organization: ${{ env.ORG }}"
          echo "Package: ${{ env.IMAGE_NAME }}"
          echo "Latest Tag: ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_NAME }}:latest"
          echo "SHA Tag: ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo ""
          echo "ðŸ”§ To make this package public:"
          echo "1. Visit: https://github.com/orgs/${{ env.ORG }}/packages/container/${{ env.IMAGE_NAME }}/settings"
          echo "2. Change 'Package visibility' from Private to Public"
          echo "3. Click 'I understand the consequences, change package visibility'"
          echo ""
          echo "ðŸ”— Package URL: https://github.com/orgs/${{ env.ORG }}/packages/container/${{ env.IMAGE_NAME }}"

      - name: Test package accessibility (will fail if private)
        continue-on-error: true
        run: |
          echo "Testing package accessibility..."
          podman logout ${{ env.REGISTRY }} || true
          if podman pull ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_NAME }}:latest; then
            echo " Package is publicly accessible"
          else
            echo "â„¹ Package is private (expected for organization packages)"
            echo "Manual step required to make it public"
          fi